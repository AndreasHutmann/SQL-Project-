/* Title:  1. Data cleaning 
   Description : This query performs baasic data check and cleaning before anlaysing. It ensures the dataset is cosisntent, realiable and ready for                        analysing and visualization work 

    [Cleaning Step]
    1. Preview the data.
    2. Null Value check
    3. Duplicate row check
    4. Numeric range & outlier scan
    5. Categorical value sanity checks
    6. Business logic validation            
*/

1.1 Preview the table
select *
from shopping_trends_updated stu ;

1.2 Null value check
select
	sum(case when `Age` is null then 1 else 0 end) as null_age,
	sum(case when `Gender` is null then 1 else 0 end) as Gender,
	sum(case when "Item Purchased" is null then 1 else 0 end) as null_Item_Purchased,
	sum(case when `Category` is null then 1 else 0 end) as Category,
	sum(case when "Purchase Amount (USD)" is null then 1 else 0 end) as null_Purchase_Amount,
	sum(case when `Location` is null then 1 else 0 end) as null_Location,
	sum(case when "Size" is null then 1 else 0 end) as null_Size,
	sum(case when `Color` is null then 1 else 0 end) as null_Color,
	sum(case when `Season` is null then 1 else 0 end) as null_Season,
	sum(case when "Review Rating" is null then 1 else 0 end) as null_Review_Rating,
	sum(case when `Subscription Status` is null then 1 else 0 end) as null_Subscription_Status,
	sum(case when "Shipping Type" is null then 1 else 0 end) as null_Shipping_Type,
	sum(case when "Discount Applied" is null then 1 else 0 end) as null_Discount_Applied,
	sum(case when "Promo Code Used" is null then 1 else 0 end) as null_Promo_Code_Used,
	sum(case when "Previous Purchases" is null then 1 else 0 end) as null_Previous_Purchases,		
	sum(case when "Payment Method" is null then 1 else 0 end) as null_Payment_Method,
	sum(case when "Frequency of Purchases" is null then 1 else 0 end) as null_Frequency_of_Purchases
from shopping_trends_updated stu;


1.3 Duplicate row check (by key tuple)
select 	
	stu."Customer ID",
	stu."Item Purchased",
	stu.Category,
	COUNT(*) as duplicate_cnt
from shopping_trends_updated stu 
GROUP by stu."Customer ID", stu."Item Purchased", stu.Category
having COUNT(*) > 1;  


1.4 Numeric range & outlier scan
select 
	MIN(stu.age) as min_age, 
	round(avg(stu.age),1) as avg_age, 
	MAX(stu.Age) as max_age,
	MIN(stu."Purchase Amount (USD)") as min_Amount, 
	round(avg(stu."Purchase Amount (USD)"),1) as avg_Amount, 
	MAX(stu."Purchase Amount (USD)") as max_Amount,
	MIN(stu."Review Rating") as min_review, 
	round(avg(stu."Review Rating"),1) as avg_review, 
	MAX(stu."Review Rating") as max_review
from shopping_trends_updated stu

    
1.5 Categorical value sanity checks
select 
	distinct stu.Gender,
	 stu."Subscription Status",
	 stu."Payment Method"
from shopping_trends_updated stu;

1.6 Business logic validation
Examples: discount vs promo code consistency, purchase counts, etc.

select COUNT(*)
from shopping_trends_updated stu
where stu."Discount Applied" = 'Yes' AND stu."Promo Code Used" = 'No';






